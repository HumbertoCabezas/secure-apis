# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  apiProject: '**\SecureApi\SecureApi.Api\SecureApi.Api.csproj'
  conferencesProject: '**\SecureApi\SecureApi.Conferences\SecureApi.Conferences.csproj'
  speakerProject: '**\SecureApi\SecureApi.Speaker\SecureApi.Speaker.csproj'
  apiWorkerProject: '**\SecureApi\SecureApi.Api.Worker\SecureApi.Api.Worker.csproj'
  speakerWorkerProject: '**\SecureApi\SecureApi.Speaker.Worker\SecureApi.Speaker.Worker.csproj'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(apiProject)'
    arguments: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\Api\SecureApi.zip"'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(conferencesProject)'
    arguments: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\Conferences\ConferencesAPI.zip"'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(speakerProject)'
    arguments: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\Speaker\SpeakerAPI.zip"'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '$(apiWorkerProject)'
    arguments: '-o "$(build.artifactStagingDirectory)\ApiWorker\"'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    projects: '$(speakerWorkerProject)'
    arguments: '-o "$(build.artifactStagingDirectory)\SpeakerWorker\"'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: CopyFiles@2
  inputs:
    SourceFolder: 'deployment'
    Contents: '*.json'
    TargetFolder: '$(build.artifactStagingDirectory)\deployment'
    CleanTargetFolder: true
    OverWrite: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
